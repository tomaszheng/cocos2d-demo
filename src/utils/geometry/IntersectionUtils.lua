---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by tomas.
--- DateTime: 2021/6/2 15:19
---
local M = {}

function M.pointLineDistance(point, startP, endP, isSegment)
    local dx = endP.x - startP.x
    local dy = endP.y - startP.y
    local d = dx * dx + dy * dy
    local t = ((point.x - startP.x) * dx + (point.y - startP.y) * dy) / d
    local p

    if not isSegment then
        p = cc.p(startP.x + t * dx, startP.y + t * dy)
    else
        if (d) then
            if (t < 0) then
                p = startP
            elseif (t > 1) then
                p = endP
            else
                p = cc.p(startP.x + t * dx, startP.y + t * dy)
            end
        else
            p = startP
        end
    end

    dx = point.x - p.x
    dy = point.y - p.y
    return math.sqrt(dx * dx + dy * dy)
end

--- 求过点p的直线，与圆的切点
function M.pointOfTangency(center, radius, p)
    local distance = cc.pGetDistance(center, p)
    local rad = math.asin(radius / distance)
    local len = math.cos(rad) * distance
    local normal = cc.pNormalize(cc.pSub(center, p))
    local dummy = cc.pAdd(p, cc.pMul(normal, len))
    local point1 = cc.pRotateByAngle(dummy, p, rad)
    local point2 = cc.pRotateByAngle(dummy, p, -rad)
    return point1, point2
end

return M
---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by tomas.
--- DateTime: 2021/11/25 14:24
---
local BaseShader = class("BaseShader", BaseComponent)

BaseShader.VERT = "res/shaders/noMV.vert"
BaseShader.FRAG = "res/shaders/noMV.frag"

function BaseShader:ctor(node, data)
    BaseShader.super.ctor(self, node, data)
    self:initData(data)
    self:initGLState()
end

function BaseShader:initData(data)
    data = data or {}
    self.defines = data.defines or {}
    self.vert = data.vert or self.VERT
    self.frag = data.frag or self.FRAG
    self.glState = nil
end

function BaseShader:initGLState()
    self.glState = cc.GLProgramState:getOrCreateWithShaders(self.vert, self.frag, self:getCompileTimeDefine())
    self:setDefaultUniform()
    self:setGLState(true)
end

function BaseShader:setDefaultUniform()
    --- TODO override
end

function BaseShader:getCompileTimeDefine()
    local defines = {}
    table.walk(self.defines, function(define, key)
        local chars = string.toTable(key)
        table.walk(chars, function(char, i)
            if i ~= 1 and char >= "A" and char <= "Z" and chars[i - 1] ~= "_" then
                chars[i] = "_" .. char
            end
        end)
        key = table.concat(chars):upper()
        table.insert(defines, key .. " " .. define)
    end)
    return table.concat(defines, ";")
end

function BaseShader:setVec2(name, v2, immediately)
    self.glState:setUniformVec2(name, v2)
    self:setGLState(immediately)
end

function BaseShader:setVec3(name, v3, immediately)
    self.glState:setUniformVec3(name, v3)
    self:setGLState(immediately)
end

function BaseShader:setVec4(name, v4, immediately)
    self.glState:setUniformVec3(name, v4)
    self:setGLState(immediately)
end

function BaseShader:setFloat(name, f, immediately)
    self.glState:setUniformFloat(name, f)
    self:setGLState(immediately)
end

function BaseShader:setInt(name, n, immediately)
    self.glState:setUniformInt(name, n)
    self:setGLState(immediately)
end

function BaseShader:setTexture(name, tex, immediately)

end

function BaseShader:setColor3f(name, color, immediately)
    local c4f = cc.convertColor(color, "4f")
    self:setVec3(name, cc.vec3(c4f.r, c4f.g, c4f.b), immediately)
end

function BaseShader:setColor4f(name, color, immediately)
    local c4f = cc.convertColor(color, "4f")
    self:setVec4(name, cc.vec4(c4f.r, c4f.g, c4f.b, c4f.a), immediately)
end

function BaseShader:setGLState(immediately)
    immediately = immediately == nil and true or immediately
    if immediately then
        self.node:setGLProgramState(self.glState)
    end
end

return BaseShader
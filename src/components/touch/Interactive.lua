---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by tomas.
--- DateTime: 2021/12/28 15:59
---
local TouchConstants = require("src.components.touch.TouchConstants")
local Interactive = class("Interactive", BaseComponent)

Interactive.MULTI_ENABLED = true

function Interactive:ctor(node, data)
    Interactive.super.ctor(self, node, data)
    self:initData(data)
end

function Interactive:initData(data)
    data = data or {}
    -- 交互效果
    self._style = data.interactionStyle or TouchConstants.INTERACTION_STYLES.NONE
    -- 按下缩放系数
    self._scale = data.scale or 1.1
    -- 按下换颜色
    self._color = type(data.color) == "number" and hexColor(data.color) or data.color or hexColor(0xeeeeee)
    -- 按下换图片, key是Clickable.STATUS
    self._images = data.images or {}
    -- 自定义交互方法(在按下/抬起手指时触发)
    self._onInteractiveFunc = data.onInteractive

    self._interactionAction = nil
    self._isInteractiveStarted = false

    self._nodeOriginalScale = self.node:getScale()
    self._nodeOriginalColor = self.node:getColor()
end

function Interactive:press(position)
    self._isInteractiveStarted = true
    self:restoreNode()
    self:stopInteractionAction()
    if self._style == TouchConstants.INTERACTION_STYLES.COLOR then
        self.node:setColor(self._color)
    elseif self._style == TouchConstants.INTERACTION_STYLES.SCALE then
        self._interactionAction = self.node:runAction(cc.EaseSineOut:create(cc.ScaleTo:create(0.15, self._nodeOriginalScale * self._scale)))
    elseif self._style == TouchConstants.INTERACTION_STYLES.IMAGE then
        UIUtils.updateImageTexture(self.node, self._images[TouchConstants.STATUS.PRESSED], TouchConstants.STATUS.PRESSED)
    else
        doCallback(self._onInteractiveFunc, TouchConstants.STATUS.PRESSED, position)
    end
end

function Interactive:loosen()
    self._isInteractiveStarted = false
    self:restoreNode()
end

function Interactive:restoreNode()
    self:stopInteractionAction()
    if self._style == TouchConstants.INTERACTION_STYLES.COLOR then
        self.node:setColor(self._nodeOriginalColor)
    elseif self._style == TouchConstants.INTERACTION_STYLES.SCALE then
        self._interactionAction = self.node:runAction(cc.EaseSineOut:create(cc.ScaleTo:create(0.15, self._nodeOriginalScale)))
    elseif self._style == TouchConstants.INTERACTION_STYLES.IMAGE then
        UIUtils.updateImageTexture(self.node, self._images[TouchConstants.STATUS.NORMAL], TouchConstants.STATUS.NORMAL)
    else
        doCallback(self._onInteractiveFunc, TouchConstants.STATUS.NORMAL)
    end
end

function Interactive:stopInteractionAction()
    if isObjectExist(self._interactionAction) then
        self.node:stopAction(self._interactionAction)
    end
    self._interactionAction = nil
end

function Interactive:setOnInteraction(func)
    if func and type(func) == "function" then
        self._onInteractiveFunc = func
    end
end

function Interactive:isInteractiveStarted()
    return self._isInteractiveStarted
end

function Interactive:updateOriginalData()
    self._nodeOriginalScale = self.node:getScale()
    self._nodeOriginalColor = self.node:getColor()
end

function Interactive:onDestroy()
    self:stopInteractionAction()
end

return Interactive
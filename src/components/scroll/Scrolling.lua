---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by tomas.
--- DateTime: 2022/1/6 17:46
---
local Dragging = require("src.components.touch.Dragging")
local Scrolling = class("Scrolling", Dragging)

Scrolling.DIRECTION = {
    NONE = 0,
    HORIZONTAL = 1,
    VERTICAL = 2,
}

function Scrolling:ctor(node, data)
    Scrolling.super.ctor(self, node, data)
end

function Scrolling:initData(data)
    Scrolling.super.initData(self, data)

    self._direction = data.direction or Scrolling.DIRECTION.NONE

    self._maxMoveOffset = cc.p(0, 0)
end

function Scrolling:begin(position)
    self._targetCurrPosition = cc.p(self._target:getPosition())
    self._currAlignAnchor = self:getCurrAlignAnchor(position)
    self._isStartFollowed = false
    self._isDragging = true
    local size = self.node:getContentSize()
    local targetSize = self._target:getContentSize()
    self._maxMoveOffset = cc.p(size.width - targetSize.width, size.height - targetSize.height)
end

function Scrolling:getCurrAlignAnchor(position)
    position = self._target:convertToNodeSpace(position)
    local size = self._target:getContentSize()
    return cc.p(position.x / size.width, position.y / size.height)
end

function Scrolling:setPosition(pos)
    if self._direction == Scrolling.DIRECTION.HORIZONTAL then
        self._target:moveX(cc.clampf(pos.x, self._maxMoveOffset.x, 0))
    elseif self._direction == Scrolling.DIRECTION.VERTICAL then
        self._target:moveY(cc.clampf(pos.y, self._maxMoveOffset.y, 0))
    else
        self._target:moveX(cc.clampf(pos.x, self._maxMoveOffset.x, 0))
        self._target:moveY(cc.clampf(pos.y, self._maxMoveOffset.y, 0))
    end
end

function Scrolling:isFollowed()
    local bOffX = math.abs(self._targetCurrPosition.x - self._dstPosition.x) < 1
    local bOffY = math.abs(self._targetCurrPosition.y - self._dstPosition.y) < 1
    if self._direction == Scrolling.DIRECTION.HORIZONTAL then
        return bOffX
    elseif self._direction == Scrolling.DIRECTION.VERTICAL then
        return bOffY
    else
        return bOffX or bOffY
    end
end

return Scrolling
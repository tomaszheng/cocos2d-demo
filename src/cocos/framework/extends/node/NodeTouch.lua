---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by tomas.
--- DateTime: 2021/12/13 16:23
---
local Node = cc.Node

local __listenerId__ = 0

function Node:addTouchEvent(options)
    options = options or {}
    __listenerId__ = __listenerId__ + 1

    self:addTouchEvent_()

    self.touchCallbacks_[__listenerId__] = {
        onBegan = options.onBegan, onMoved = options.onMoved,
        onEnded = options.onEnded, onCanceled = options.onCanceled,
        listenerId = __listenerId__
    }

    return __listenerId__
end

function Node:addTouchEvent_()
    if self.listener_ and type(self.listener_) == "userdata" then return end

    self.touchCallbacks_ = {}

    local listener = cc.EventListenerTouchOneByOne:create()
    listener:registerScriptHandler(handler(self, self.onTouchBegan_), cc.Handler.EVENT_TOUCH_BEGAN)
    listener:registerScriptHandler(handler(self, self.onTouchMoved_), cc.Handler.EVENT_TOUCH_MOVED)
    listener:registerScriptHandler(handler(self, self.onTouchEnded_), cc.Handler.EVENT_TOUCH_ENDED)
    listener:registerScriptHandler(handler(self, self.onTouchCanceled_), cc.Handler.EVENT_TOUCH_CANCELLED)

    self.listener_ = listener

    self:getEventDispatcher():addEventListenerWithSceneGraphPriority(listener, self)
end

function Node:onTouchBegan_(touch)
    table.walk(self.touchCallbacks_, function(callbacks)
        callbacks.isValid = doCallback(callbacks.onBegan, touch)
    end)
    return true
end

function Node:onTouchMoved_(touch)
    table.walk(self.touchCallbacks_, function(callbacks)
        if callbacks.isValid then
            doCallback(callbacks.onMoved, touch)
        end
    end)
end

function Node:onTouchEnded_(touch)
    table.walk(self.touchCallbacks_, function(callbacks)
        if callbacks.isValid then
            doCallback(callbacks.onEnded, touch)
        end
    end)
end

function Node:onTouchCanceled_(touch)
    table.walk(self.touchCallbacks_, function(callbacks)
        if callbacks.isValid then
            doCallback(callbacks.onCanceled, touch)
        end
    end)
end

function Node:removeTouchEvent(listenerId)
    if listenerId then
        self.touchCallbacks_[listenerId] = nil
    else
        self.touchCallbacks_ = {}
        local listener = self.listener_
        if listener and type(listener) == "userdata" then
            self:getEventDispatcher():removeEventListener(listener)
            self.listener_ = nil
        end
    end
end

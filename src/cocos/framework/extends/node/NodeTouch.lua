---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by tomas.
--- DateTime: 2021/12/13 16:23
---
local Node = cc.Node

local __listenerId__ = 0

function Node:addTouchEvent(options)
    self:addTouchEvent_()

    options = options or {}
    options.onBegan = options.onBegan or function()
        return true
    end

    __listenerId__ = __listenerId__ + 1
    self.__touchCallbacks[__listenerId__] = options

    return __listenerId__
end

function Node:addTouchEvent_()
    if self.__listener__ and type(self.__listener__) == "userdata" then return end

    self.__touchCallbacks = {}

    local listener = cc.EventListenerTouchOneByOne:create()
    listener:registerScriptHandler(handler(self, self.onTouchBegan_), cc.Handler.EVENT_TOUCH_BEGAN)
    listener:registerScriptHandler(handler(self, self.onTouchMoved_), cc.Handler.EVENT_TOUCH_MOVED)
    listener:registerScriptHandler(handler(self, self.onTouchEnded_), cc.Handler.EVENT_TOUCH_ENDED)
    listener:registerScriptHandler(handler(self, self.onTouchCanceled_), cc.Handler.EVENT_TOUCH_CANCELLED)

    self:getEventDispatcher():addEventListenerWithSceneGraphPriority(listener, self)
end

function Node:onTouchBegan_(touch)
    table.walk(self.__touchCallbacks, function(callbacks)
        callbacks.isValid = doCallback(callbacks.onBegan, touch)
    end)
end

function Node:onTouchMoved_(touch)
    table.walk(self.__touchCallbacks, function(callbacks)
        if callbacks.isValid then
            doCallback(callbacks.onMoved, touch)
        end
    end)
end

function Node:onTouchEnded_(touch)
    table.walk(self.__touchCallbacks, function(callbacks)
        if callbacks.isValid then
            doCallback(callbacks.onEnded, touch)
        end
    end)
end

function Node:onTouchCanceled_(touch)
    table.walk(self.__touchCallbacks, function(callbacks)
        if callbacks.isValid then
            doCallback(callbacks.onCanceled, touch)
        end
    end)
end

function Node:removeTouchEvent(listenerId)
    if listenerId then
        self.__touchCallbacks[listenerId] = nil
    else
        self.__touchCallbacks = {}
        local listener = self.__listener__
        if listener and type(listener) == "userdata" then
            self:getEventDispatcher():removeEventListener(listener)
            self.__listener__ = nil
        end
    end
end
